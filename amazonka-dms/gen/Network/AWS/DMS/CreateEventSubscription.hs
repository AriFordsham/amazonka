{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.DMS.CreateEventSubscription
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Creates an AWS DMS event notification subscription.
--
--
-- You can specify the type of source (@SourceType@ ) you want to be notified of, provide a list of AWS DMS source IDs (@SourceIds@ ) that triggers the events, and provide a list of event categories (@EventCategories@ ) for events you want to be notified of. If you specify both the @SourceType@ and @SourceIds@ , such as @SourceType = replication-instance@ and @SourceIdentifier = my-replinstance@ , you will be notified of all the replication instance events for the specified source. If you specify a @SourceType@ but don't specify a @SourceIdentifier@ , you receive notice of the events for that source type for all your AWS DMS sources. If you don't specify either @SourceType@ nor @SourceIdentifier@ , you will be notified of events generated from all AWS DMS sources belonging to your customer account.
--
-- For more information about AWS DMS events, see <https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html Working with Events and Notifications> in the /AWS Database Migration Service User Guide./
module Network.AWS.DMS.CreateEventSubscription
  ( -- * Creating a Request
    createEventSubscription,
    CreateEventSubscription,

    -- * Request Lenses
    cesSourceIds,
    cesEnabled,
    cesEventCategories,
    cesTags,
    cesSourceType,
    cesSubscriptionName,
    cesSNSTopicARN,

    -- * Destructuring the Response
    createEventSubscriptionResponse,
    CreateEventSubscriptionResponse,

    -- * Response Lenses
    cesrrsEventSubscription,
    cesrrsResponseStatus,
  )
where

import Network.AWS.DMS.Types
import Network.AWS.Lens
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- |
--
--
--
-- /See:/ 'createEventSubscription' smart constructor.
data CreateEventSubscription = CreateEventSubscription'
  { _cesSourceIds ::
      !(Maybe [Text]),
    _cesEnabled ::
      !(Maybe Bool),
    _cesEventCategories ::
      !(Maybe [Text]),
    _cesTags ::
      !(Maybe [Tag]),
    _cesSourceType ::
      !(Maybe Text),
    _cesSubscriptionName ::
      !Text,
    _cesSNSTopicARN ::
      !Text
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'CreateEventSubscription' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'cesSourceIds' - A list of identifiers for which AWS DMS provides notification events. If you don't specify a value, notifications are provided for all sources. If you specify multiple values, they must be of the same type. For example, if you specify a database instance ID, then all of the other values must be database instance IDs.
--
-- * 'cesEnabled' - A Boolean value; set to @true@ to activate the subscription, or set to @false@ to create the subscription but not activate it.
--
-- * 'cesEventCategories' - A list of event categories for a source type that you want to subscribe to. For more information, see <https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html Working with Events and Notifications> in the /AWS Database Migration Service User Guide./
--
-- * 'cesTags' - One or more tags to be assigned to the event subscription.
--
-- * 'cesSourceType' - The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to @replication-instance@ . If this value isn't specified, all events are returned.  Valid values: @replication-instance@ | @replication-task@
--
-- * 'cesSubscriptionName' - The name of the AWS DMS event notification subscription. This name must be less than 255 characters.
--
-- * 'cesSNSTopicARN' - The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
createEventSubscription ::
  -- | 'cesSubscriptionName'
  Text ->
  -- | 'cesSNSTopicARN'
  Text ->
  CreateEventSubscription
createEventSubscription
  pSubscriptionName_
  pSNSTopicARN_ =
    CreateEventSubscription'
      { _cesSourceIds = Nothing,
        _cesEnabled = Nothing,
        _cesEventCategories = Nothing,
        _cesTags = Nothing,
        _cesSourceType = Nothing,
        _cesSubscriptionName = pSubscriptionName_,
        _cesSNSTopicARN = pSNSTopicARN_
      }

-- | A list of identifiers for which AWS DMS provides notification events. If you don't specify a value, notifications are provided for all sources. If you specify multiple values, they must be of the same type. For example, if you specify a database instance ID, then all of the other values must be database instance IDs.
cesSourceIds :: Lens' CreateEventSubscription [Text]
cesSourceIds = lens _cesSourceIds (\s a -> s {_cesSourceIds = a}) . _Default . _Coerce

-- | A Boolean value; set to @true@ to activate the subscription, or set to @false@ to create the subscription but not activate it.
cesEnabled :: Lens' CreateEventSubscription (Maybe Bool)
cesEnabled = lens _cesEnabled (\s a -> s {_cesEnabled = a})

-- | A list of event categories for a source type that you want to subscribe to. For more information, see <https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html Working with Events and Notifications> in the /AWS Database Migration Service User Guide./
cesEventCategories :: Lens' CreateEventSubscription [Text]
cesEventCategories = lens _cesEventCategories (\s a -> s {_cesEventCategories = a}) . _Default . _Coerce

-- | One or more tags to be assigned to the event subscription.
cesTags :: Lens' CreateEventSubscription [Tag]
cesTags = lens _cesTags (\s a -> s {_cesTags = a}) . _Default . _Coerce

-- | The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to @replication-instance@ . If this value isn't specified, all events are returned.  Valid values: @replication-instance@ | @replication-task@
cesSourceType :: Lens' CreateEventSubscription (Maybe Text)
cesSourceType = lens _cesSourceType (\s a -> s {_cesSourceType = a})

-- | The name of the AWS DMS event notification subscription. This name must be less than 255 characters.
cesSubscriptionName :: Lens' CreateEventSubscription Text
cesSubscriptionName = lens _cesSubscriptionName (\s a -> s {_cesSubscriptionName = a})

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
cesSNSTopicARN :: Lens' CreateEventSubscription Text
cesSNSTopicARN = lens _cesSNSTopicARN (\s a -> s {_cesSNSTopicARN = a})

instance AWSRequest CreateEventSubscription where
  type
    Rs CreateEventSubscription =
      CreateEventSubscriptionResponse
  request = postJSON dms
  response =
    receiveJSON
      ( \s h x ->
          CreateEventSubscriptionResponse'
            <$> (x .?> "EventSubscription") <*> (pure (fromEnum s))
      )

instance Hashable CreateEventSubscription

instance NFData CreateEventSubscription

instance ToHeaders CreateEventSubscription where
  toHeaders =
    const
      ( mconcat
          [ "X-Amz-Target"
              =# ( "AmazonDMSv20160101.CreateEventSubscription" ::
                     ByteString
                 ),
            "Content-Type"
              =# ("application/x-amz-json-1.1" :: ByteString)
          ]
      )

instance ToJSON CreateEventSubscription where
  toJSON CreateEventSubscription' {..} =
    object
      ( catMaybes
          [ ("SourceIds" .=) <$> _cesSourceIds,
            ("Enabled" .=) <$> _cesEnabled,
            ("EventCategories" .=) <$> _cesEventCategories,
            ("Tags" .=) <$> _cesTags,
            ("SourceType" .=) <$> _cesSourceType,
            Just ("SubscriptionName" .= _cesSubscriptionName),
            Just ("SnsTopicArn" .= _cesSNSTopicARN)
          ]
      )

instance ToPath CreateEventSubscription where
  toPath = const "/"

instance ToQuery CreateEventSubscription where
  toQuery = const mempty

-- |
--
--
--
-- /See:/ 'createEventSubscriptionResponse' smart constructor.
data CreateEventSubscriptionResponse = CreateEventSubscriptionResponse'
  { _cesrrsEventSubscription ::
      !( Maybe
           EventSubscription
       ),
    _cesrrsResponseStatus ::
      !Int
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'CreateEventSubscriptionResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'cesrrsEventSubscription' - The event subscription that was created.
--
-- * 'cesrrsResponseStatus' - -- | The response status code.
createEventSubscriptionResponse ::
  -- | 'cesrrsResponseStatus'
  Int ->
  CreateEventSubscriptionResponse
createEventSubscriptionResponse pResponseStatus_ =
  CreateEventSubscriptionResponse'
    { _cesrrsEventSubscription =
        Nothing,
      _cesrrsResponseStatus = pResponseStatus_
    }

-- | The event subscription that was created.
cesrrsEventSubscription :: Lens' CreateEventSubscriptionResponse (Maybe EventSubscription)
cesrrsEventSubscription = lens _cesrrsEventSubscription (\s a -> s {_cesrrsEventSubscription = a})

-- | -- | The response status code.
cesrrsResponseStatus :: Lens' CreateEventSubscriptionResponse Int
cesrrsResponseStatus = lens _cesrrsResponseStatus (\s a -> s {_cesrrsResponseStatus = a})

instance NFData CreateEventSubscriptionResponse
