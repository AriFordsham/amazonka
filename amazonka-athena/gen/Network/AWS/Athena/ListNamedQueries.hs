{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Athena.ListNamedQueries
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Provides a list of available query IDs only for queries saved in the specified workgroup. Requires that you have access to the specified workgroup. If a workgroup is not specified, lists the saved queries for the primary workgroup.
--
--
-- For code samples using the AWS SDK for Java, see <http://docs.aws.amazon.com/athena/latest/ug/code-samples.html Examples and Code Samples> in the /Amazon Athena User Guide/ .
--
--
-- This operation returns paginated results.
module Network.AWS.Athena.ListNamedQueries
  ( -- * Creating a Request
    listNamedQueries,
    ListNamedQueries,

    -- * Request Lenses
    lnqNextToken,
    lnqMaxResults,
    lnqWorkGroup,

    -- * Destructuring the Response
    listNamedQueriesResponse,
    ListNamedQueriesResponse,

    -- * Response Lenses
    lnqrrsNamedQueryIds,
    lnqrrsNextToken,
    lnqrrsResponseStatus,
  )
where

import Network.AWS.Athena.Types
import Network.AWS.Lens
import Network.AWS.Pager
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'listNamedQueries' smart constructor.
data ListNamedQueries = ListNamedQueries'
  { _lnqNextToken ::
      !(Maybe Text),
    _lnqMaxResults :: !(Maybe Nat),
    _lnqWorkGroup :: !(Maybe Text)
  }
  deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'ListNamedQueries' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lnqNextToken' - A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
--
-- * 'lnqMaxResults' - The maximum number of queries to return in this request.
--
-- * 'lnqWorkGroup' - The name of the workgroup from which the named queries are being returned. If a workgroup is not specified, the saved queries for the primary workgroup are returned.
listNamedQueries ::
  ListNamedQueries
listNamedQueries =
  ListNamedQueries'
    { _lnqNextToken = Nothing,
      _lnqMaxResults = Nothing,
      _lnqWorkGroup = Nothing
    }

-- | A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
lnqNextToken :: Lens' ListNamedQueries (Maybe Text)
lnqNextToken = lens _lnqNextToken (\s a -> s {_lnqNextToken = a})

-- | The maximum number of queries to return in this request.
lnqMaxResults :: Lens' ListNamedQueries (Maybe Natural)
lnqMaxResults = lens _lnqMaxResults (\s a -> s {_lnqMaxResults = a}) . mapping _Nat

-- | The name of the workgroup from which the named queries are being returned. If a workgroup is not specified, the saved queries for the primary workgroup are returned.
lnqWorkGroup :: Lens' ListNamedQueries (Maybe Text)
lnqWorkGroup = lens _lnqWorkGroup (\s a -> s {_lnqWorkGroup = a})

instance AWSPager ListNamedQueries where
  page rq rs
    | stop (rs ^. lnqrrsNextToken) = Nothing
    | stop (rs ^. lnqrrsNamedQueryIds) = Nothing
    | otherwise =
      Just $ rq & lnqNextToken .~ rs ^. lnqrrsNextToken

instance AWSRequest ListNamedQueries where
  type Rs ListNamedQueries = ListNamedQueriesResponse
  request = postJSON athena
  response =
    receiveJSON
      ( \s h x ->
          ListNamedQueriesResponse'
            <$> (x .?> "NamedQueryIds")
            <*> (x .?> "NextToken")
            <*> (pure (fromEnum s))
      )

instance Hashable ListNamedQueries

instance NFData ListNamedQueries

instance ToHeaders ListNamedQueries where
  toHeaders =
    const
      ( mconcat
          [ "X-Amz-Target"
              =# ("AmazonAthena.ListNamedQueries" :: ByteString),
            "Content-Type"
              =# ("application/x-amz-json-1.1" :: ByteString)
          ]
      )

instance ToJSON ListNamedQueries where
  toJSON ListNamedQueries' {..} =
    object
      ( catMaybes
          [ ("NextToken" .=) <$> _lnqNextToken,
            ("MaxResults" .=) <$> _lnqMaxResults,
            ("WorkGroup" .=) <$> _lnqWorkGroup
          ]
      )

instance ToPath ListNamedQueries where
  toPath = const "/"

instance ToQuery ListNamedQueries where
  toQuery = const mempty

-- | /See:/ 'listNamedQueriesResponse' smart constructor.
data ListNamedQueriesResponse = ListNamedQueriesResponse'
  { _lnqrrsNamedQueryIds ::
      !(Maybe (List1 Text)),
    _lnqrrsNextToken ::
      !(Maybe Text),
    _lnqrrsResponseStatus ::
      !Int
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'ListNamedQueriesResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lnqrrsNamedQueryIds' - The list of unique query IDs.
--
-- * 'lnqrrsNextToken' - A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
--
-- * 'lnqrrsResponseStatus' - -- | The response status code.
listNamedQueriesResponse ::
  -- | 'lnqrrsResponseStatus'
  Int ->
  ListNamedQueriesResponse
listNamedQueriesResponse pResponseStatus_ =
  ListNamedQueriesResponse'
    { _lnqrrsNamedQueryIds =
        Nothing,
      _lnqrrsNextToken = Nothing,
      _lnqrrsResponseStatus = pResponseStatus_
    }

-- | The list of unique query IDs.
lnqrrsNamedQueryIds :: Lens' ListNamedQueriesResponse (Maybe (NonEmpty Text))
lnqrrsNamedQueryIds = lens _lnqrrsNamedQueryIds (\s a -> s {_lnqrrsNamedQueryIds = a}) . mapping _List1

-- | A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
lnqrrsNextToken :: Lens' ListNamedQueriesResponse (Maybe Text)
lnqrrsNextToken = lens _lnqrrsNextToken (\s a -> s {_lnqrrsNextToken = a})

-- | -- | The response status code.
lnqrrsResponseStatus :: Lens' ListNamedQueriesResponse Int
lnqrrsResponseStatus = lens _lnqrrsResponseStatus (\s a -> s {_lnqrrsResponseStatus = a})

instance NFData ListNamedQueriesResponse
