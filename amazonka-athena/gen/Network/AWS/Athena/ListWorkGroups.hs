{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Athena.ListWorkGroups
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Lists available workgroups for the account.
module Network.AWS.Athena.ListWorkGroups
  ( -- * Creating a Request
    listWorkGroups,
    ListWorkGroups,

    -- * Request Lenses
    lwgNextToken,
    lwgMaxResults,

    -- * Destructuring the Response
    listWorkGroupsResponse,
    ListWorkGroupsResponse,

    -- * Response Lenses
    lwgrrsNextToken,
    lwgrrsWorkGroups,
    lwgrrsResponseStatus,
  )
where

import Network.AWS.Athena.Types
import Network.AWS.Lens
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'listWorkGroups' smart constructor.
data ListWorkGroups = ListWorkGroups'
  { _lwgNextToken ::
      !(Maybe Text),
    _lwgMaxResults :: !(Maybe Nat)
  }
  deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'ListWorkGroups' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lwgNextToken' - A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
--
-- * 'lwgMaxResults' - The maximum number of workgroups to return in this request.
listWorkGroups ::
  ListWorkGroups
listWorkGroups =
  ListWorkGroups'
    { _lwgNextToken = Nothing,
      _lwgMaxResults = Nothing
    }

-- | A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
lwgNextToken :: Lens' ListWorkGroups (Maybe Text)
lwgNextToken = lens _lwgNextToken (\s a -> s {_lwgNextToken = a})

-- | The maximum number of workgroups to return in this request.
lwgMaxResults :: Lens' ListWorkGroups (Maybe Natural)
lwgMaxResults = lens _lwgMaxResults (\s a -> s {_lwgMaxResults = a}) . mapping _Nat

instance AWSRequest ListWorkGroups where
  type Rs ListWorkGroups = ListWorkGroupsResponse
  request = postJSON athena
  response =
    receiveJSON
      ( \s h x ->
          ListWorkGroupsResponse'
            <$> (x .?> "NextToken")
            <*> (x .?> "WorkGroups" .!@ mempty)
            <*> (pure (fromEnum s))
      )

instance Hashable ListWorkGroups

instance NFData ListWorkGroups

instance ToHeaders ListWorkGroups where
  toHeaders =
    const
      ( mconcat
          [ "X-Amz-Target"
              =# ("AmazonAthena.ListWorkGroups" :: ByteString),
            "Content-Type"
              =# ("application/x-amz-json-1.1" :: ByteString)
          ]
      )

instance ToJSON ListWorkGroups where
  toJSON ListWorkGroups' {..} =
    object
      ( catMaybes
          [ ("NextToken" .=) <$> _lwgNextToken,
            ("MaxResults" .=) <$> _lwgMaxResults
          ]
      )

instance ToPath ListWorkGroups where
  toPath = const "/"

instance ToQuery ListWorkGroups where
  toQuery = const mempty

-- | /See:/ 'listWorkGroupsResponse' smart constructor.
data ListWorkGroupsResponse = ListWorkGroupsResponse'
  { _lwgrrsNextToken ::
      !(Maybe Text),
    _lwgrrsWorkGroups ::
      !( Maybe
           [WorkGroupSummary]
       ),
    _lwgrrsResponseStatus ::
      !Int
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'ListWorkGroupsResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lwgrrsNextToken' - A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
--
-- * 'lwgrrsWorkGroups' - A list of 'WorkGroupSummary' objects that include the names, descriptions, creation times, and states for each workgroup.
--
-- * 'lwgrrsResponseStatus' - -- | The response status code.
listWorkGroupsResponse ::
  -- | 'lwgrrsResponseStatus'
  Int ->
  ListWorkGroupsResponse
listWorkGroupsResponse pResponseStatus_ =
  ListWorkGroupsResponse'
    { _lwgrrsNextToken = Nothing,
      _lwgrrsWorkGroups = Nothing,
      _lwgrrsResponseStatus = pResponseStatus_
    }

-- | A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
lwgrrsNextToken :: Lens' ListWorkGroupsResponse (Maybe Text)
lwgrrsNextToken = lens _lwgrrsNextToken (\s a -> s {_lwgrrsNextToken = a})

-- | A list of 'WorkGroupSummary' objects that include the names, descriptions, creation times, and states for each workgroup.
lwgrrsWorkGroups :: Lens' ListWorkGroupsResponse [WorkGroupSummary]
lwgrrsWorkGroups = lens _lwgrrsWorkGroups (\s a -> s {_lwgrrsWorkGroups = a}) . _Default . _Coerce

-- | -- | The response status code.
lwgrrsResponseStatus :: Lens' ListWorkGroupsResponse Int
lwgrrsResponseStatus = lens _lwgrrsResponseStatus (\s a -> s {_lwgrrsResponseStatus = a})

instance NFData ListWorkGroupsResponse
