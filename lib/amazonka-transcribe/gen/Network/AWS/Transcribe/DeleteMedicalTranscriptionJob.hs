{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-binds   #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}
{-# OPTIONS_GHC -fno-warn-deprecations   #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Transcribe.DeleteMedicalTranscriptionJob
-- Copyright   : (c) 2013-2020 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Deletes a transcription job generated by Amazon Transcribe Medical and any related information.
module Network.AWS.Transcribe.DeleteMedicalTranscriptionJob
    (
    -- * Creating a request
      DeleteMedicalTranscriptionJob (..)
    , mkDeleteMedicalTranscriptionJob
    -- ** Request lenses
    , dmtjMedicalTranscriptionJobName

    -- * Destructuring the response
    , DeleteMedicalTranscriptionJobResponse (..)
    , mkDeleteMedicalTranscriptionJobResponse
    ) where

import qualified Network.AWS.Lens as Lens
import qualified Network.AWS.Prelude as Core
import qualified Network.AWS.Request as Request
import qualified Network.AWS.Response as Response
import qualified Network.AWS.Transcribe.Types as Types

-- | /See:/ 'mkDeleteMedicalTranscriptionJob' smart constructor.
newtype DeleteMedicalTranscriptionJob = DeleteMedicalTranscriptionJob'
  { medicalTranscriptionJobName :: Types.MedicalTranscriptionJobName
    -- ^ The name you provide to the @DeleteMedicalTranscriptionJob@ object to delete a transcription job.
  }
  deriving stock (Core.Eq, Core.Ord, Core.Read, Core.Show, Core.Generic)
  deriving newtype (Core.Hashable, Core.NFData)

-- | Creates a 'DeleteMedicalTranscriptionJob' value with any optional fields omitted.
mkDeleteMedicalTranscriptionJob
    :: Types.MedicalTranscriptionJobName -- ^ 'medicalTranscriptionJobName'
    -> DeleteMedicalTranscriptionJob
mkDeleteMedicalTranscriptionJob medicalTranscriptionJobName
  = DeleteMedicalTranscriptionJob'{medicalTranscriptionJobName}

-- | The name you provide to the @DeleteMedicalTranscriptionJob@ object to delete a transcription job.
--
-- /Note:/ Consider using 'medicalTranscriptionJobName' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
dmtjMedicalTranscriptionJobName :: Lens.Lens' DeleteMedicalTranscriptionJob Types.MedicalTranscriptionJobName
dmtjMedicalTranscriptionJobName = Lens.field @"medicalTranscriptionJobName"
{-# INLINEABLE dmtjMedicalTranscriptionJobName #-}
{-# DEPRECATED medicalTranscriptionJobName "Use generic-lens or generic-optics with 'medicalTranscriptionJobName' instead"  #-}

instance Core.ToQuery DeleteMedicalTranscriptionJob where
        toQuery _ = Core.pure Core.mempty

instance Core.ToHeaders DeleteMedicalTranscriptionJob where
        toHeaders DeleteMedicalTranscriptionJob{..}
          = Core.pure
              ("X-Amz-Target", "Transcribe.DeleteMedicalTranscriptionJob")
              Core.<> Core.pure ("Content-Type", "application/x-amz-json-1.1")

instance Core.FromJSON DeleteMedicalTranscriptionJob where
        toJSON DeleteMedicalTranscriptionJob{..}
          = Core.object
              (Core.catMaybes
                 [Core.Just
                    ("MedicalTranscriptionJobName" Core..=
                       medicalTranscriptionJobName)])

instance Core.AWSRequest DeleteMedicalTranscriptionJob where
        type Rs DeleteMedicalTranscriptionJob =
             DeleteMedicalTranscriptionJobResponse
        toRequest x@Core.Request{..}
          = Core.Request{Core._rqService = Types.mkServiceConfig,
                         Core._rqMethod = Request.POST, Core._rqPath = "/",
                         Core._rqQuery = Core.toQuery x, Core._rqHeaders = Core.toHeaders x,
                         Core._rqBody = Core.toJSONBody x}
        
        {-# INLINE toRequest #-}
        parseResponse
          = Response.receiveNull DeleteMedicalTranscriptionJobResponse'
        
        {-# INLINE parseResponse #-}

-- | /See:/ 'mkDeleteMedicalTranscriptionJobResponse' smart constructor.
data DeleteMedicalTranscriptionJobResponse = DeleteMedicalTranscriptionJobResponse'
  deriving stock (Core.Eq, Core.Ord, Core.Read, Core.Show, Core.Generic)
  deriving anyclass (Core.Hashable, Core.NFData)

-- | Creates a 'DeleteMedicalTranscriptionJobResponse' value with any optional fields omitted.
mkDeleteMedicalTranscriptionJobResponse
    :: DeleteMedicalTranscriptionJobResponse
mkDeleteMedicalTranscriptionJobResponse
  = DeleteMedicalTranscriptionJobResponse'
