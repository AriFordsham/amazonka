{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.SWF.Types.CompleteWorkflowExecutionFailedEventAttributes
-- Copyright   : (c) 2013-2020 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Network.AWS.SWF.Types.CompleteWorkflowExecutionFailedEventAttributes
  ( CompleteWorkflowExecutionFailedEventAttributes (..),

    -- * Smart constructor
    mkCompleteWorkflowExecutionFailedEventAttributes,

    -- * Lenses
    cCause,
    cDecisionTaskCompletedEventId,
  )
where

import qualified Network.AWS.Lens as Lens
import qualified Network.AWS.Prelude as Core
import qualified Network.AWS.SWF.Types.CompleteWorkflowExecutionFailedCause as Types

-- | Provides the details of the @CompleteWorkflowExecutionFailed@ event.
--
-- /See:/ 'mkCompleteWorkflowExecutionFailedEventAttributes' smart constructor.
data CompleteWorkflowExecutionFailedEventAttributes = CompleteWorkflowExecutionFailedEventAttributes'
  { -- | The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.
    cause :: Types.CompleteWorkflowExecutionFailedCause,
    -- | The ID of the @DecisionTaskCompleted@ event corresponding to the decision task that resulted in the @CompleteWorkflowExecution@ decision to complete this execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
    decisionTaskCompletedEventId :: Core.Integer
  }
  deriving stock (Core.Eq, Core.Ord, Core.Read, Core.Show, Core.Generic)
  deriving anyclass (Core.Hashable, Core.NFData)

-- | Creates a 'CompleteWorkflowExecutionFailedEventAttributes' value with any optional fields omitted.
mkCompleteWorkflowExecutionFailedEventAttributes ::
  -- | 'cause'
  Types.CompleteWorkflowExecutionFailedCause ->
  -- | 'decisionTaskCompletedEventId'
  Core.Integer ->
  CompleteWorkflowExecutionFailedEventAttributes
mkCompleteWorkflowExecutionFailedEventAttributes
  cause
  decisionTaskCompletedEventId =
    CompleteWorkflowExecutionFailedEventAttributes'
      { cause,
        decisionTaskCompletedEventId
      }

-- | The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.
--
-- /Note:/ Consider using 'cause' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
cCause :: Lens.Lens' CompleteWorkflowExecutionFailedEventAttributes Types.CompleteWorkflowExecutionFailedCause
cCause = Lens.field @"cause"
{-# DEPRECATED cCause "Use generic-lens or generic-optics with 'cause' instead." #-}

-- | The ID of the @DecisionTaskCompleted@ event corresponding to the decision task that resulted in the @CompleteWorkflowExecution@ decision to complete this execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
--
-- /Note:/ Consider using 'decisionTaskCompletedEventId' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
cDecisionTaskCompletedEventId :: Lens.Lens' CompleteWorkflowExecutionFailedEventAttributes Core.Integer
cDecisionTaskCompletedEventId = Lens.field @"decisionTaskCompletedEventId"
{-# DEPRECATED cDecisionTaskCompletedEventId "Use generic-lens or generic-optics with 'decisionTaskCompletedEventId' instead." #-}

instance
  Core.FromJSON
    CompleteWorkflowExecutionFailedEventAttributes
  where
  parseJSON =
    Core.withObject "CompleteWorkflowExecutionFailedEventAttributes" Core.$
      \x ->
        CompleteWorkflowExecutionFailedEventAttributes'
          Core.<$> (x Core..: "cause")
          Core.<*> (x Core..: "decisionTaskCompletedEventId")
