{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.SWF.Types.ScheduleActivityTaskFailedEventAttributes
-- Copyright   : (c) 2013-2020 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Network.AWS.SWF.Types.ScheduleActivityTaskFailedEventAttributes
  ( ScheduleActivityTaskFailedEventAttributes (..),

    -- * Smart constructor
    mkScheduleActivityTaskFailedEventAttributes,

    -- * Lenses
    satfeaActivityType,
    satfeaActivityId,
    satfeaCause,
    satfeaDecisionTaskCompletedEventId,
  )
where

import qualified Network.AWS.Lens as Lens
import qualified Network.AWS.Prelude as Lude
import Network.AWS.SWF.Types.ActivityType
import Network.AWS.SWF.Types.ScheduleActivityTaskFailedCause

-- | Provides the details of the @ScheduleActivityTaskFailed@ event.
--
-- /See:/ 'mkScheduleActivityTaskFailedEventAttributes' smart constructor.
data ScheduleActivityTaskFailedEventAttributes = ScheduleActivityTaskFailedEventAttributes'
  { -- | The activity type provided in the @ScheduleActivityTask@ decision that failed.
    activityType :: ActivityType,
    -- | The activityId provided in the @ScheduleActivityTask@ decision that failed.
    activityId :: Lude.Text,
    -- | The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.
    cause :: ScheduleActivityTaskFailedCause,
    -- | The ID of the @DecisionTaskCompleted@ event corresponding to the decision that resulted in the scheduling of this activity task. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
    decisionTaskCompletedEventId :: Lude.Integer
  }
  deriving stock (Lude.Eq, Lude.Ord, Lude.Read, Lude.Show, Lude.Generic)
  deriving anyclass (Lude.Hashable, Lude.NFData)

-- | Creates a value of 'ScheduleActivityTaskFailedEventAttributes' with the minimum fields required to make a request.
--
-- * 'activityType' - The activity type provided in the @ScheduleActivityTask@ decision that failed.
-- * 'activityId' - The activityId provided in the @ScheduleActivityTask@ decision that failed.
-- * 'cause' - The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.
-- * 'decisionTaskCompletedEventId' - The ID of the @DecisionTaskCompleted@ event corresponding to the decision that resulted in the scheduling of this activity task. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
mkScheduleActivityTaskFailedEventAttributes ::
  -- | 'activityType'
  ActivityType ->
  -- | 'activityId'
  Lude.Text ->
  -- | 'cause'
  ScheduleActivityTaskFailedCause ->
  -- | 'decisionTaskCompletedEventId'
  Lude.Integer ->
  ScheduleActivityTaskFailedEventAttributes
mkScheduleActivityTaskFailedEventAttributes
  pActivityType_
  pActivityId_
  pCause_
  pDecisionTaskCompletedEventId_ =
    ScheduleActivityTaskFailedEventAttributes'
      { activityType =
          pActivityType_,
        activityId = pActivityId_,
        cause = pCause_,
        decisionTaskCompletedEventId =
          pDecisionTaskCompletedEventId_
      }

-- | The activity type provided in the @ScheduleActivityTask@ decision that failed.
--
-- /Note:/ Consider using 'activityType' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
satfeaActivityType :: Lens.Lens' ScheduleActivityTaskFailedEventAttributes ActivityType
satfeaActivityType = Lens.lens (activityType :: ScheduleActivityTaskFailedEventAttributes -> ActivityType) (\s a -> s {activityType = a} :: ScheduleActivityTaskFailedEventAttributes)
{-# DEPRECATED satfeaActivityType "Use generic-lens or generic-optics with 'activityType' instead." #-}

-- | The activityId provided in the @ScheduleActivityTask@ decision that failed.
--
-- /Note:/ Consider using 'activityId' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
satfeaActivityId :: Lens.Lens' ScheduleActivityTaskFailedEventAttributes Lude.Text
satfeaActivityId = Lens.lens (activityId :: ScheduleActivityTaskFailedEventAttributes -> Lude.Text) (\s a -> s {activityId = a} :: ScheduleActivityTaskFailedEventAttributes)
{-# DEPRECATED satfeaActivityId "Use generic-lens or generic-optics with 'activityId' instead." #-}

-- | The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.
--
-- /Note:/ Consider using 'cause' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
satfeaCause :: Lens.Lens' ScheduleActivityTaskFailedEventAttributes ScheduleActivityTaskFailedCause
satfeaCause = Lens.lens (cause :: ScheduleActivityTaskFailedEventAttributes -> ScheduleActivityTaskFailedCause) (\s a -> s {cause = a} :: ScheduleActivityTaskFailedEventAttributes)
{-# DEPRECATED satfeaCause "Use generic-lens or generic-optics with 'cause' instead." #-}

-- | The ID of the @DecisionTaskCompleted@ event corresponding to the decision that resulted in the scheduling of this activity task. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
--
-- /Note:/ Consider using 'decisionTaskCompletedEventId' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
satfeaDecisionTaskCompletedEventId :: Lens.Lens' ScheduleActivityTaskFailedEventAttributes Lude.Integer
satfeaDecisionTaskCompletedEventId = Lens.lens (decisionTaskCompletedEventId :: ScheduleActivityTaskFailedEventAttributes -> Lude.Integer) (\s a -> s {decisionTaskCompletedEventId = a} :: ScheduleActivityTaskFailedEventAttributes)
{-# DEPRECATED satfeaDecisionTaskCompletedEventId "Use generic-lens or generic-optics with 'decisionTaskCompletedEventId' instead." #-}

instance Lude.FromJSON ScheduleActivityTaskFailedEventAttributes where
  parseJSON =
    Lude.withObject
      "ScheduleActivityTaskFailedEventAttributes"
      ( \x ->
          ScheduleActivityTaskFailedEventAttributes'
            Lude.<$> (x Lude..: "activityType")
            Lude.<*> (x Lude..: "activityId")
            Lude.<*> (x Lude..: "cause")
            Lude.<*> (x Lude..: "decisionTaskCompletedEventId")
      )
