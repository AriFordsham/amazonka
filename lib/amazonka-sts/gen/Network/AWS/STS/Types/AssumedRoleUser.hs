{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.STS.Types.AssumedRoleUser
-- Copyright   : (c) 2013-2020 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Network.AWS.STS.Types.AssumedRoleUser
  ( AssumedRoleUser (..),

    -- * Smart constructor
    mkAssumedRoleUser,

    -- * Lenses
    aruAssumedRoleId,
    aruARN,
  )
where

import qualified Network.AWS.Lens as Lens
import qualified Network.AWS.Prelude as Lude

-- | The identifiers for the temporary security credentials that the operation returns.
--
-- /See:/ 'mkAssumedRoleUser' smart constructor.
data AssumedRoleUser = AssumedRoleUser'
  { assumedRoleId :: Lude.Text,
    arn :: Lude.Text
  }
  deriving stock
    ( Lude.Eq,
      Lude.Ord,
      Lude.Read,
      Lude.Show,
      Lude.Generic
    )
  deriving anyclass (Lude.Hashable, Lude.NFData)

-- | Creates a value of 'AssumedRoleUser' with the minimum fields required to make a request.
--
-- * 'arn' - The ARN of the temporary security credentials that are returned from the 'AssumeRole' action. For more information about ARNs and how to use them in policies, see <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html IAM Identifiers> in the /IAM User Guide/ .
-- * 'assumedRoleId' - A unique identifier that contains the role ID and the role session name of the role that is being assumed. The role ID is generated by AWS when the role is created.
mkAssumedRoleUser ::
  -- | 'assumedRoleId'
  Lude.Text ->
  -- | 'arn'
  Lude.Text ->
  AssumedRoleUser
mkAssumedRoleUser pAssumedRoleId_ pARN_ =
  AssumedRoleUser' {assumedRoleId = pAssumedRoleId_, arn = pARN_}

-- | A unique identifier that contains the role ID and the role session name of the role that is being assumed. The role ID is generated by AWS when the role is created.
--
-- /Note:/ Consider using 'assumedRoleId' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
aruAssumedRoleId :: Lens.Lens' AssumedRoleUser Lude.Text
aruAssumedRoleId = Lens.lens (assumedRoleId :: AssumedRoleUser -> Lude.Text) (\s a -> s {assumedRoleId = a} :: AssumedRoleUser)
{-# DEPRECATED aruAssumedRoleId "Use generic-lens or generic-optics with 'assumedRoleId' instead." #-}

-- | The ARN of the temporary security credentials that are returned from the 'AssumeRole' action. For more information about ARNs and how to use them in policies, see <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html IAM Identifiers> in the /IAM User Guide/ .
--
-- /Note:/ Consider using 'arn' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
aruARN :: Lens.Lens' AssumedRoleUser Lude.Text
aruARN = Lens.lens (arn :: AssumedRoleUser -> Lude.Text) (\s a -> s {arn = a} :: AssumedRoleUser)
{-# DEPRECATED aruARN "Use generic-lens or generic-optics with 'arn' instead." #-}

instance Lude.FromXML AssumedRoleUser where
  parseXML x =
    AssumedRoleUser'
      Lude.<$> (x Lude..@ "AssumedRoleId") Lude.<*> (x Lude..@ "Arn")
