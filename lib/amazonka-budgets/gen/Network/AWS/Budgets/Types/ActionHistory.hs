{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Budgets.Types.ActionHistory
-- Copyright   : (c) 2013-2020 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Network.AWS.Budgets.Types.ActionHistory
  ( ActionHistory (..),

    -- * Smart constructor
    mkActionHistory,

    -- * Lenses
    ahTimestamp,
    ahStatus,
    ahEventType,
    ahActionHistoryDetails,
  )
where

import qualified Network.AWS.Budgets.Types.ActionHistoryDetails as Types
import qualified Network.AWS.Budgets.Types.ActionStatus as Types
import qualified Network.AWS.Budgets.Types.EventType as Types
import qualified Network.AWS.Lens as Lens
import qualified Network.AWS.Prelude as Core

-- | The historical records for a budget action.
--
-- /See:/ 'mkActionHistory' smart constructor.
data ActionHistory = ActionHistory'
  { timestamp :: Core.NominalDiffTime,
    -- | The status of action at the time of the event.
    status :: Types.ActionStatus,
    -- | This distinguishes between whether the events are triggered by the user or generated by the system.
    eventType :: Types.EventType,
    -- | The description of details of the event.
    actionHistoryDetails :: Types.ActionHistoryDetails
  }
  deriving stock (Core.Eq, Core.Ord, Core.Read, Core.Show, Core.Generic)
  deriving anyclass (Core.NFData)

-- | Creates a 'ActionHistory' value with any optional fields omitted.
mkActionHistory ::
  -- | 'timestamp'
  Core.NominalDiffTime ->
  -- | 'status'
  Types.ActionStatus ->
  -- | 'eventType'
  Types.EventType ->
  -- | 'actionHistoryDetails'
  Types.ActionHistoryDetails ->
  ActionHistory
mkActionHistory timestamp status eventType actionHistoryDetails =
  ActionHistory'
    { timestamp,
      status,
      eventType,
      actionHistoryDetails
    }

-- | Undocumented field.
--
-- /Note:/ Consider using 'timestamp' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
ahTimestamp :: Lens.Lens' ActionHistory Core.NominalDiffTime
ahTimestamp = Lens.field @"timestamp"
{-# DEPRECATED ahTimestamp "Use generic-lens or generic-optics with 'timestamp' instead." #-}

-- | The status of action at the time of the event.
--
-- /Note:/ Consider using 'status' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
ahStatus :: Lens.Lens' ActionHistory Types.ActionStatus
ahStatus = Lens.field @"status"
{-# DEPRECATED ahStatus "Use generic-lens or generic-optics with 'status' instead." #-}

-- | This distinguishes between whether the events are triggered by the user or generated by the system.
--
-- /Note:/ Consider using 'eventType' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
ahEventType :: Lens.Lens' ActionHistory Types.EventType
ahEventType = Lens.field @"eventType"
{-# DEPRECATED ahEventType "Use generic-lens or generic-optics with 'eventType' instead." #-}

-- | The description of details of the event.
--
-- /Note:/ Consider using 'actionHistoryDetails' with <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/generic-optics generic-optics> instead.
ahActionHistoryDetails :: Lens.Lens' ActionHistory Types.ActionHistoryDetails
ahActionHistoryDetails = Lens.field @"actionHistoryDetails"
{-# DEPRECATED ahActionHistoryDetails "Use generic-lens or generic-optics with 'actionHistoryDetails' instead." #-}

instance Core.FromJSON ActionHistory where
  parseJSON =
    Core.withObject "ActionHistory" Core.$
      \x ->
        ActionHistory'
          Core.<$> (x Core..: "Timestamp")
          Core.<*> (x Core..: "Status")
          Core.<*> (x Core..: "EventType")
          Core.<*> (x Core..: "ActionHistoryDetails")
