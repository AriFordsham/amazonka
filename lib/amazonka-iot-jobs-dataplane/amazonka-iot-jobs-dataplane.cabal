cabal-version:      2.2
name:               amazonka-iot-jobs-dataplane
version:            2.0.0.0
synopsis:           Amazon IoT Jobs Data Plane SDK.
homepage:           https://github.com/brendanhay/amazonka
bug-reports:        https://github.com/brendanhay/amazonka/issues
license:            MPL-2.0
license-file:       LICENSE
author:             Brendan Hay
maintainer:         Brendan Hay <brendan.g.hay+amazonka@gmail.com>
copyright:          Copyright (c) 2013-2020 Brendan Hay
category:           AWS, Cloud
build-type:         Simple
extra-source-files:
  fixture/*.proto
  fixture/*.yaml
  README.md
  src/.gitkeep

description:
  The types from this library are intended to be used with
  <http://hackage.haskell.org/package/amazonka amazonka>, which provides
  mechanisms for specifying AuthN/AuthZ information, sending requests,
  and receiving responses.
  .
  Lenses are used for constructing and manipulating types,
  due to the depth of nesting of AWS types and transparency regarding
  de/serialisation into more palatable Haskell values.
  The provided lenses should be compatible with any of the major lens libraries
  such as <http://hackage.haskell.org/package/lens lens> or
  <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
  .
  See "Network.AWS.IoTJobsData" or <https://aws.amazon.com/documentation/ the AWS documentation>
  to get started.

source-repository head
  type:     git
  location: git://github.com/brendanhay/amazonka.git
  subdir:   lib/amazonka-iot-jobs-dataplane

common base
  default-language:   Haskell2010
  ghc-options:
    -Wall -funbox-strict-fields -fwarn-incomplete-uni-patterns
    -fwarn-incomplete-record-updates

  default-extensions:
    NoImplicitPrelude
    DataKinds
    DeriveAnyClass
    DeriveGeneric
    DerivingStrategies
    DuplicateRecordFields
    FlexibleContexts
    FlexibleInstances
    GeneralizedNewtypeDeriving
    LambdaCase
    NamedFieldPuns
    OverloadedStrings
    PatternSynonyms
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    StrictData
    TupleSections
    TypeApplications
    TypeFamilies

  build-depends:      base >=4.12 && <5

library
  import:          base
  hs-source-dirs:  gen
  exposed-modules:
    Network.AWS.IoTJobsData
    Network.AWS.IoTJobsData.DescribeJobExecution
    Network.AWS.IoTJobsData.GetPendingJobExecutions
    Network.AWS.IoTJobsData.StartNextPendingJobExecution
    Network.AWS.IoTJobsData.Types
    Network.AWS.IoTJobsData.UpdateJobExecution
    Network.AWS.IoTJobsData.Waiters

  other-modules:
    Network.AWS.IoTJobsData.Types.DescribeJobExecutionJobId
    Network.AWS.IoTJobsData.Types.DetailsKey
    Network.AWS.IoTJobsData.Types.DetailsValue
    Network.AWS.IoTJobsData.Types.JobDocument
    Network.AWS.IoTJobsData.Types.JobExecution
    Network.AWS.IoTJobsData.Types.JobExecutionState
    Network.AWS.IoTJobsData.Types.JobExecutionStatus
    Network.AWS.IoTJobsData.Types.JobExecutionSummary
    Network.AWS.IoTJobsData.Types.JobId
    Network.AWS.IoTJobsData.Types.ThingName

  build-depends:   amazonka-core ==2.0.0.0.*

test-suite amazonka-iot-jobs-dataplane-test
  import:         base
  type:           exitcode-stdio-1.0
  hs-source-dirs: test
  main-is:        Main.hs
  ghc-options:    -threaded

  -- This section is encoded by the template and any modules added by
  -- hand outside these namespaces will not correctly be added to the
  -- distribution package.
  other-modules:
    Test.AWS.Gen.IoTJobsData
    Test.AWS.IoTJobsData
    Test.AWS.IoTJobsData.Internal

  build-depends:
    , amazonka-core                >=2.0.0.0 && <2.0.0.1
    , amazonka-iot-jobs-dataplane
    , amazonka-test                >=2.0.0.0 && <2.0.0.1
    , bytestring
    , case-insensitive
    , tasty
    , tasty-hunit
    , text
    , time
    , unordered-containers
