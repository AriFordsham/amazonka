{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Organizations.ListHandshakesForAccount
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Lists the current handshakes that are associated with the account of the requesting user.
--
--
-- Handshakes that are @ACCEPTED@ , @DECLINED@ , or @CANCELED@ appear in the results of this API for only 30 days after changing to that state. After that, they're deleted and no longer accessible.
--
-- This operation can be called from any account in the organization.
--
--
-- This operation returns paginated results.
module Network.AWS.Organizations.ListHandshakesForAccount
  ( -- * Creating a Request
    listHandshakesForAccount,
    ListHandshakesForAccount,

    -- * Request Lenses
    lhfaNextToken,
    lhfaMaxResults,
    lhfaFilter,

    -- * Destructuring the Response
    listHandshakesForAccountResponse,
    ListHandshakesForAccountResponse,

    -- * Response Lenses
    lhfarrsHandshakes,
    lhfarrsNextToken,
    lhfarrsResponseStatus,
  )
where

import Network.AWS.Lens
import Network.AWS.Organizations.Types
import Network.AWS.Pager
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'listHandshakesForAccount' smart constructor.
data ListHandshakesForAccount = ListHandshakesForAccount'
  { _lhfaNextToken ::
      !(Maybe Text),
    _lhfaMaxResults ::
      !(Maybe Nat),
    _lhfaFilter ::
      !( Maybe
           HandshakeFilter
       )
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'ListHandshakesForAccount' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lhfaNextToken' - The parameter for receiving additional results if you receive a @NextToken@ response in a previous request. A @NextToken@ response indicates that more output is available. Set this parameter to the value of the previous call's @NextToken@ response to indicate where the output should continue from.
--
-- * 'lhfaMaxResults' - The total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the @NextToken@ response element is present and has a value (is not null). Include that value as the @NextToken@ request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check @NextToken@ after every operation to ensure that you receive all of the results.
--
-- * 'lhfaFilter' - Filters the handshakes that you want included in the response. The default is all types. Use the @ActionType@ element to limit the output to only a specified type, such as @INVITE@ , @ENABLE_ALL_FEATURES@ , or @APPROVE_ALL_FEATURES@ . Alternatively, for the @ENABLE_ALL_FEATURES@ handshake that generates a separate child handshake for each member account, you can specify @ParentHandshakeId@ to see only the handshakes that were generated by that parent request.
listHandshakesForAccount ::
  ListHandshakesForAccount
listHandshakesForAccount =
  ListHandshakesForAccount'
    { _lhfaNextToken = Nothing,
      _lhfaMaxResults = Nothing,
      _lhfaFilter = Nothing
    }

-- | The parameter for receiving additional results if you receive a @NextToken@ response in a previous request. A @NextToken@ response indicates that more output is available. Set this parameter to the value of the previous call's @NextToken@ response to indicate where the output should continue from.
lhfaNextToken :: Lens' ListHandshakesForAccount (Maybe Text)
lhfaNextToken = lens _lhfaNextToken (\s a -> s {_lhfaNextToken = a})

-- | The total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the @NextToken@ response element is present and has a value (is not null). Include that value as the @NextToken@ request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check @NextToken@ after every operation to ensure that you receive all of the results.
lhfaMaxResults :: Lens' ListHandshakesForAccount (Maybe Natural)
lhfaMaxResults = lens _lhfaMaxResults (\s a -> s {_lhfaMaxResults = a}) . mapping _Nat

-- | Filters the handshakes that you want included in the response. The default is all types. Use the @ActionType@ element to limit the output to only a specified type, such as @INVITE@ , @ENABLE_ALL_FEATURES@ , or @APPROVE_ALL_FEATURES@ . Alternatively, for the @ENABLE_ALL_FEATURES@ handshake that generates a separate child handshake for each member account, you can specify @ParentHandshakeId@ to see only the handshakes that were generated by that parent request.
lhfaFilter :: Lens' ListHandshakesForAccount (Maybe HandshakeFilter)
lhfaFilter = lens _lhfaFilter (\s a -> s {_lhfaFilter = a})

instance AWSPager ListHandshakesForAccount where
  page rq rs
    | stop (rs ^. lhfarrsNextToken) = Nothing
    | stop (rs ^. lhfarrsHandshakes) = Nothing
    | otherwise =
      Just $ rq & lhfaNextToken .~ rs ^. lhfarrsNextToken

instance AWSRequest ListHandshakesForAccount where
  type
    Rs ListHandshakesForAccount =
      ListHandshakesForAccountResponse
  request = postJSON organizations
  response =
    receiveJSON
      ( \s h x ->
          ListHandshakesForAccountResponse'
            <$> (x .?> "Handshakes" .!@ mempty)
            <*> (x .?> "NextToken")
            <*> (pure (fromEnum s))
      )

instance Hashable ListHandshakesForAccount

instance NFData ListHandshakesForAccount

instance ToHeaders ListHandshakesForAccount where
  toHeaders =
    const
      ( mconcat
          [ "X-Amz-Target"
              =# ( "AWSOrganizationsV20161128.ListHandshakesForAccount" ::
                     ByteString
                 ),
            "Content-Type"
              =# ("application/x-amz-json-1.1" :: ByteString)
          ]
      )

instance ToJSON ListHandshakesForAccount where
  toJSON ListHandshakesForAccount' {..} =
    object
      ( catMaybes
          [ ("NextToken" .=) <$> _lhfaNextToken,
            ("MaxResults" .=) <$> _lhfaMaxResults,
            ("Filter" .=) <$> _lhfaFilter
          ]
      )

instance ToPath ListHandshakesForAccount where
  toPath = const "/"

instance ToQuery ListHandshakesForAccount where
  toQuery = const mempty

-- | /See:/ 'listHandshakesForAccountResponse' smart constructor.
data ListHandshakesForAccountResponse = ListHandshakesForAccountResponse'
  { _lhfarrsHandshakes ::
      !( Maybe
           [Handshake]
       ),
    _lhfarrsNextToken ::
      !( Maybe
           Text
       ),
    _lhfarrsResponseStatus ::
      !Int
  }
  deriving
    ( Eq,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'ListHandshakesForAccountResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lhfarrsHandshakes' - A list of 'Handshake' objects with details about each of the handshakes that is associated with the specified account.
--
-- * 'lhfarrsNextToken' - If present, indicates that more output is available than is included in the current response. Use this value in the @NextToken@ request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the @NextToken@ response element comes back as @null@ .
--
-- * 'lhfarrsResponseStatus' - -- | The response status code.
listHandshakesForAccountResponse ::
  -- | 'lhfarrsResponseStatus'
  Int ->
  ListHandshakesForAccountResponse
listHandshakesForAccountResponse pResponseStatus_ =
  ListHandshakesForAccountResponse'
    { _lhfarrsHandshakes =
        Nothing,
      _lhfarrsNextToken = Nothing,
      _lhfarrsResponseStatus = pResponseStatus_
    }

-- | A list of 'Handshake' objects with details about each of the handshakes that is associated with the specified account.
lhfarrsHandshakes :: Lens' ListHandshakesForAccountResponse [Handshake]
lhfarrsHandshakes = lens _lhfarrsHandshakes (\s a -> s {_lhfarrsHandshakes = a}) . _Default . _Coerce

-- | If present, indicates that more output is available than is included in the current response. Use this value in the @NextToken@ request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the @NextToken@ response element comes back as @null@ .
lhfarrsNextToken :: Lens' ListHandshakesForAccountResponse (Maybe Text)
lhfarrsNextToken = lens _lhfarrsNextToken (\s a -> s {_lhfarrsNextToken = a})

-- | -- | The response status code.
lhfarrsResponseStatus :: Lens' ListHandshakesForAccountResponse Int
lhfarrsResponseStatus = lens _lhfarrsResponseStatus (\s a -> s {_lhfarrsResponseStatus = a})

instance NFData ListHandshakesForAccountResponse
