{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Organizations.ListHandshakesForOrganization
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Lists the handshakes that are associated with the organization that the requesting user is part of. The @ListHandshakesForOrganization@ operation returns a list of handshake structures. Each structure contains details and status about a handshake.
--
--
-- Handshakes that are @ACCEPTED@ , @DECLINED@ , or @CANCELED@ appear in the results of this API for only 30 days after changing to that state. After that, they're deleted and no longer accessible.
--
-- This operation can be called only from the organization's management account or by a member account that is a delegated administrator for an AWS service.
--
--
-- This operation returns paginated results.
module Network.AWS.Organizations.ListHandshakesForOrganization
  ( -- * Creating a Request
    listHandshakesForOrganization,
    ListHandshakesForOrganization,

    -- * Request Lenses
    lhfoNextToken,
    lhfoMaxResults,
    lhfoFilter,

    -- * Destructuring the Response
    listHandshakesForOrganizationResponse,
    ListHandshakesForOrganizationResponse,

    -- * Response Lenses
    lhforrsHandshakes,
    lhforrsNextToken,
    lhforrsResponseStatus,
  )
where

import Network.AWS.Lens
import Network.AWS.Organizations.Types
import Network.AWS.Pager
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'listHandshakesForOrganization' smart constructor.
data ListHandshakesForOrganization = ListHandshakesForOrganization'
  { _lhfoNextToken ::
      !( Maybe
           Text
       ),
    _lhfoMaxResults ::
      !( Maybe
           Nat
       ),
    _lhfoFilter ::
      !( Maybe
           HandshakeFilter
       )
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'ListHandshakesForOrganization' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lhfoNextToken' - The parameter for receiving additional results if you receive a @NextToken@ response in a previous request. A @NextToken@ response indicates that more output is available. Set this parameter to the value of the previous call's @NextToken@ response to indicate where the output should continue from.
--
-- * 'lhfoMaxResults' - The total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the @NextToken@ response element is present and has a value (is not null). Include that value as the @NextToken@ request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check @NextToken@ after every operation to ensure that you receive all of the results.
--
-- * 'lhfoFilter' - A filter of the handshakes that you want included in the response. The default is all types. Use the @ActionType@ element to limit the output to only a specified type, such as @INVITE@ , @ENABLE-ALL-FEATURES@ , or @APPROVE-ALL-FEATURES@ . Alternatively, for the @ENABLE-ALL-FEATURES@ handshake that generates a separate child handshake for each member account, you can specify the @ParentHandshakeId@ to see only the handshakes that were generated by that parent request.
listHandshakesForOrganization ::
  ListHandshakesForOrganization
listHandshakesForOrganization =
  ListHandshakesForOrganization'
    { _lhfoNextToken =
        Nothing,
      _lhfoMaxResults = Nothing,
      _lhfoFilter = Nothing
    }

-- | The parameter for receiving additional results if you receive a @NextToken@ response in a previous request. A @NextToken@ response indicates that more output is available. Set this parameter to the value of the previous call's @NextToken@ response to indicate where the output should continue from.
lhfoNextToken :: Lens' ListHandshakesForOrganization (Maybe Text)
lhfoNextToken = lens _lhfoNextToken (\s a -> s {_lhfoNextToken = a})

-- | The total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the @NextToken@ response element is present and has a value (is not null). Include that value as the @NextToken@ request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check @NextToken@ after every operation to ensure that you receive all of the results.
lhfoMaxResults :: Lens' ListHandshakesForOrganization (Maybe Natural)
lhfoMaxResults = lens _lhfoMaxResults (\s a -> s {_lhfoMaxResults = a}) . mapping _Nat

-- | A filter of the handshakes that you want included in the response. The default is all types. Use the @ActionType@ element to limit the output to only a specified type, such as @INVITE@ , @ENABLE-ALL-FEATURES@ , or @APPROVE-ALL-FEATURES@ . Alternatively, for the @ENABLE-ALL-FEATURES@ handshake that generates a separate child handshake for each member account, you can specify the @ParentHandshakeId@ to see only the handshakes that were generated by that parent request.
lhfoFilter :: Lens' ListHandshakesForOrganization (Maybe HandshakeFilter)
lhfoFilter = lens _lhfoFilter (\s a -> s {_lhfoFilter = a})

instance AWSPager ListHandshakesForOrganization where
  page rq rs
    | stop (rs ^. lhforrsNextToken) = Nothing
    | stop (rs ^. lhforrsHandshakes) = Nothing
    | otherwise =
      Just $ rq & lhfoNextToken .~ rs ^. lhforrsNextToken

instance AWSRequest ListHandshakesForOrganization where
  type
    Rs ListHandshakesForOrganization =
      ListHandshakesForOrganizationResponse
  request = postJSON organizations
  response =
    receiveJSON
      ( \s h x ->
          ListHandshakesForOrganizationResponse'
            <$> (x .?> "Handshakes" .!@ mempty)
            <*> (x .?> "NextToken")
            <*> (pure (fromEnum s))
      )

instance Hashable ListHandshakesForOrganization

instance NFData ListHandshakesForOrganization

instance ToHeaders ListHandshakesForOrganization where
  toHeaders =
    const
      ( mconcat
          [ "X-Amz-Target"
              =# ( "AWSOrganizationsV20161128.ListHandshakesForOrganization" ::
                     ByteString
                 ),
            "Content-Type"
              =# ("application/x-amz-json-1.1" :: ByteString)
          ]
      )

instance ToJSON ListHandshakesForOrganization where
  toJSON ListHandshakesForOrganization' {..} =
    object
      ( catMaybes
          [ ("NextToken" .=) <$> _lhfoNextToken,
            ("MaxResults" .=) <$> _lhfoMaxResults,
            ("Filter" .=) <$> _lhfoFilter
          ]
      )

instance ToPath ListHandshakesForOrganization where
  toPath = const "/"

instance ToQuery ListHandshakesForOrganization where
  toQuery = const mempty

-- | /See:/ 'listHandshakesForOrganizationResponse' smart constructor.
data ListHandshakesForOrganizationResponse = ListHandshakesForOrganizationResponse'
  { _lhforrsHandshakes ::
      !( Maybe
           [Handshake]
       ),
    _lhforrsNextToken ::
      !( Maybe
           Text
       ),
    _lhforrsResponseStatus ::
      !Int
  }
  deriving
    ( Eq,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'ListHandshakesForOrganizationResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lhforrsHandshakes' - A list of 'Handshake' objects with details about each of the handshakes that are associated with an organization.
--
-- * 'lhforrsNextToken' - If present, indicates that more output is available than is included in the current response. Use this value in the @NextToken@ request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the @NextToken@ response element comes back as @null@ .
--
-- * 'lhforrsResponseStatus' - -- | The response status code.
listHandshakesForOrganizationResponse ::
  -- | 'lhforrsResponseStatus'
  Int ->
  ListHandshakesForOrganizationResponse
listHandshakesForOrganizationResponse
  pResponseStatus_ =
    ListHandshakesForOrganizationResponse'
      { _lhforrsHandshakes =
          Nothing,
        _lhforrsNextToken = Nothing,
        _lhforrsResponseStatus =
          pResponseStatus_
      }

-- | A list of 'Handshake' objects with details about each of the handshakes that are associated with an organization.
lhforrsHandshakes :: Lens' ListHandshakesForOrganizationResponse [Handshake]
lhforrsHandshakes = lens _lhforrsHandshakes (\s a -> s {_lhforrsHandshakes = a}) . _Default . _Coerce

-- | If present, indicates that more output is available than is included in the current response. Use this value in the @NextToken@ request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the @NextToken@ response element comes back as @null@ .
lhforrsNextToken :: Lens' ListHandshakesForOrganizationResponse (Maybe Text)
lhforrsNextToken = lens _lhforrsNextToken (\s a -> s {_lhforrsNextToken = a})

-- | -- | The response status code.
lhforrsResponseStatus :: Lens' ListHandshakesForOrganizationResponse Int
lhforrsResponseStatus = lens _lhforrsResponseStatus (\s a -> s {_lhforrsResponseStatus = a})

instance NFData ListHandshakesForOrganizationResponse
