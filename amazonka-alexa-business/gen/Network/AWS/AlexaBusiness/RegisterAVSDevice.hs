{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.AlexaBusiness.RegisterAVSDevice
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Registers an Alexa-enabled device built by an Original Equipment Manufacturer (OEM) using Alexa Voice Service (AVS).
module Network.AWS.AlexaBusiness.RegisterAVSDevice
  ( -- * Creating a Request
    registerAVSDevice,
    RegisterAVSDevice,

    -- * Request Lenses
    ravsdRoomARN,
    ravsdTags,
    ravsdDeviceSerialNumber,
    ravsdClientId,
    ravsdUserCode,
    ravsdProductId,
    ravsdAmazonId,

    -- * Destructuring the Response
    registerAVSDeviceResponse,
    RegisterAVSDeviceResponse,

    -- * Response Lenses
    ravsdrrsDeviceARN,
    ravsdrrsResponseStatus,
  )
where

import Network.AWS.AlexaBusiness.Types
import Network.AWS.Lens
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'registerAVSDevice' smart constructor.
data RegisterAVSDevice = RegisterAVSDevice'
  { _ravsdRoomARN ::
      !(Maybe Text),
    _ravsdTags :: !(Maybe [Tag]),
    _ravsdDeviceSerialNumber ::
      !(Maybe Text),
    _ravsdClientId :: !Text,
    _ravsdUserCode :: !Text,
    _ravsdProductId :: !Text,
    _ravsdAmazonId :: !Text
  }
  deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'RegisterAVSDevice' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'ravsdRoomARN' - The Amazon Resource Name (ARN) of the room with which to associate your AVS device.
--
-- * 'ravsdTags' - The tags to be added to the specified resource. Do not provide system tags.
--
-- * 'ravsdDeviceSerialNumber' - The key generated by the OEM that uniquely identifies a specified instance of your AVS device.
--
-- * 'ravsdClientId' - The client ID of the OEM used for code-based linking authorization on an AVS device.
--
-- * 'ravsdUserCode' - The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.
--
-- * 'ravsdProductId' - The product ID used to identify your AVS device during authorization.
--
-- * 'ravsdAmazonId' - The device type ID for your AVS device generated by Amazon when the OEM creates a new product on Amazon's Developer Console.
registerAVSDevice ::
  -- | 'ravsdClientId'
  Text ->
  -- | 'ravsdUserCode'
  Text ->
  -- | 'ravsdProductId'
  Text ->
  -- | 'ravsdAmazonId'
  Text ->
  RegisterAVSDevice
registerAVSDevice
  pClientId_
  pUserCode_
  pProductId_
  pAmazonId_ =
    RegisterAVSDevice'
      { _ravsdRoomARN = Nothing,
        _ravsdTags = Nothing,
        _ravsdDeviceSerialNumber = Nothing,
        _ravsdClientId = pClientId_,
        _ravsdUserCode = pUserCode_,
        _ravsdProductId = pProductId_,
        _ravsdAmazonId = pAmazonId_
      }

-- | The Amazon Resource Name (ARN) of the room with which to associate your AVS device.
ravsdRoomARN :: Lens' RegisterAVSDevice (Maybe Text)
ravsdRoomARN = lens _ravsdRoomARN (\s a -> s {_ravsdRoomARN = a})

-- | The tags to be added to the specified resource. Do not provide system tags.
ravsdTags :: Lens' RegisterAVSDevice [Tag]
ravsdTags = lens _ravsdTags (\s a -> s {_ravsdTags = a}) . _Default . _Coerce

-- | The key generated by the OEM that uniquely identifies a specified instance of your AVS device.
ravsdDeviceSerialNumber :: Lens' RegisterAVSDevice (Maybe Text)
ravsdDeviceSerialNumber = lens _ravsdDeviceSerialNumber (\s a -> s {_ravsdDeviceSerialNumber = a})

-- | The client ID of the OEM used for code-based linking authorization on an AVS device.
ravsdClientId :: Lens' RegisterAVSDevice Text
ravsdClientId = lens _ravsdClientId (\s a -> s {_ravsdClientId = a})

-- | The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.
ravsdUserCode :: Lens' RegisterAVSDevice Text
ravsdUserCode = lens _ravsdUserCode (\s a -> s {_ravsdUserCode = a})

-- | The product ID used to identify your AVS device during authorization.
ravsdProductId :: Lens' RegisterAVSDevice Text
ravsdProductId = lens _ravsdProductId (\s a -> s {_ravsdProductId = a})

-- | The device type ID for your AVS device generated by Amazon when the OEM creates a new product on Amazon's Developer Console.
ravsdAmazonId :: Lens' RegisterAVSDevice Text
ravsdAmazonId = lens _ravsdAmazonId (\s a -> s {_ravsdAmazonId = a})

instance AWSRequest RegisterAVSDevice where
  type Rs RegisterAVSDevice = RegisterAVSDeviceResponse
  request = postJSON alexaBusiness
  response =
    receiveJSON
      ( \s h x ->
          RegisterAVSDeviceResponse'
            <$> (x .?> "DeviceArn") <*> (pure (fromEnum s))
      )

instance Hashable RegisterAVSDevice

instance NFData RegisterAVSDevice

instance ToHeaders RegisterAVSDevice where
  toHeaders =
    const
      ( mconcat
          [ "X-Amz-Target"
              =# ("AlexaForBusiness.RegisterAVSDevice" :: ByteString),
            "Content-Type"
              =# ("application/x-amz-json-1.1" :: ByteString)
          ]
      )

instance ToJSON RegisterAVSDevice where
  toJSON RegisterAVSDevice' {..} =
    object
      ( catMaybes
          [ ("RoomArn" .=) <$> _ravsdRoomARN,
            ("Tags" .=) <$> _ravsdTags,
            ("DeviceSerialNumber" .=)
              <$> _ravsdDeviceSerialNumber,
            Just ("ClientId" .= _ravsdClientId),
            Just ("UserCode" .= _ravsdUserCode),
            Just ("ProductId" .= _ravsdProductId),
            Just ("AmazonId" .= _ravsdAmazonId)
          ]
      )

instance ToPath RegisterAVSDevice where
  toPath = const "/"

instance ToQuery RegisterAVSDevice where
  toQuery = const mempty

-- | /See:/ 'registerAVSDeviceResponse' smart constructor.
data RegisterAVSDeviceResponse = RegisterAVSDeviceResponse'
  { _ravsdrrsDeviceARN ::
      !(Maybe Text),
    _ravsdrrsResponseStatus ::
      !Int
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'RegisterAVSDeviceResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'ravsdrrsDeviceARN' - The ARN of the device.
--
-- * 'ravsdrrsResponseStatus' - -- | The response status code.
registerAVSDeviceResponse ::
  -- | 'ravsdrrsResponseStatus'
  Int ->
  RegisterAVSDeviceResponse
registerAVSDeviceResponse pResponseStatus_ =
  RegisterAVSDeviceResponse'
    { _ravsdrrsDeviceARN =
        Nothing,
      _ravsdrrsResponseStatus = pResponseStatus_
    }

-- | The ARN of the device.
ravsdrrsDeviceARN :: Lens' RegisterAVSDeviceResponse (Maybe Text)
ravsdrrsDeviceARN = lens _ravsdrrsDeviceARN (\s a -> s {_ravsdrrsDeviceARN = a})

-- | -- | The response status code.
ravsdrrsResponseStatus :: Lens' RegisterAVSDeviceResponse Int
ravsdrrsResponseStatus = lens _ravsdrrsResponseStatus (\s a -> s {_ravsdrrsResponseStatus = a})

instance NFData RegisterAVSDeviceResponse
