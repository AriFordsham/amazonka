{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.IAM.UpdateSAMLProvider
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Updates the metadata document for an existing SAML provider resource object.
module Network.AWS.IAM.UpdateSAMLProvider
  ( -- * Creating a Request
    updateSAMLProvider,
    UpdateSAMLProvider,

    -- * Request Lenses
    usamlpSAMLMetadataDocument,
    usamlpSAMLProviderARN,

    -- * Destructuring the Response
    updateSAMLProviderResponse,
    UpdateSAMLProviderResponse,

    -- * Response Lenses
    usamlprrsSAMLProviderARN,
    usamlprrsResponseStatus,
  )
where

import Network.AWS.IAM.Types
import Network.AWS.Lens
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'updateSAMLProvider' smart constructor.
data UpdateSAMLProvider = UpdateSAMLProvider'
  { _usamlpSAMLMetadataDocument ::
      !Text,
    _usamlpSAMLProviderARN :: !Text
  }
  deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'UpdateSAMLProvider' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'usamlpSAMLMetadataDocument' - An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
--
-- * 'usamlpSAMLProviderARN' - The Amazon Resource Name (ARN) of the SAML provider to update. For more information about ARNs, see <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html Amazon Resource Names (ARNs)> in the /AWS General Reference/ .
updateSAMLProvider ::
  -- | 'usamlpSAMLMetadataDocument'
  Text ->
  -- | 'usamlpSAMLProviderARN'
  Text ->
  UpdateSAMLProvider
updateSAMLProvider
  pSAMLMetadataDocument_
  pSAMLProviderARN_ =
    UpdateSAMLProvider'
      { _usamlpSAMLMetadataDocument =
          pSAMLMetadataDocument_,
        _usamlpSAMLProviderARN = pSAMLProviderARN_
      }

-- | An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
usamlpSAMLMetadataDocument :: Lens' UpdateSAMLProvider Text
usamlpSAMLMetadataDocument = lens _usamlpSAMLMetadataDocument (\s a -> s {_usamlpSAMLMetadataDocument = a})

-- | The Amazon Resource Name (ARN) of the SAML provider to update. For more information about ARNs, see <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html Amazon Resource Names (ARNs)> in the /AWS General Reference/ .
usamlpSAMLProviderARN :: Lens' UpdateSAMLProvider Text
usamlpSAMLProviderARN = lens _usamlpSAMLProviderARN (\s a -> s {_usamlpSAMLProviderARN = a})

instance AWSRequest UpdateSAMLProvider where
  type
    Rs UpdateSAMLProvider =
      UpdateSAMLProviderResponse
  request = postQuery iam
  response =
    receiveXMLWrapper
      "UpdateSAMLProviderResult"
      ( \s h x ->
          UpdateSAMLProviderResponse'
            <$> (x .@? "SAMLProviderArn") <*> (pure (fromEnum s))
      )

instance Hashable UpdateSAMLProvider

instance NFData UpdateSAMLProvider

instance ToHeaders UpdateSAMLProvider where
  toHeaders = const mempty

instance ToPath UpdateSAMLProvider where
  toPath = const "/"

instance ToQuery UpdateSAMLProvider where
  toQuery UpdateSAMLProvider' {..} =
    mconcat
      [ "Action" =: ("UpdateSAMLProvider" :: ByteString),
        "Version" =: ("2010-05-08" :: ByteString),
        "SAMLMetadataDocument"
          =: _usamlpSAMLMetadataDocument,
        "SAMLProviderArn" =: _usamlpSAMLProviderARN
      ]

-- | Contains the response to a successful 'UpdateSAMLProvider' request.
--
--
--
-- /See:/ 'updateSAMLProviderResponse' smart constructor.
data UpdateSAMLProviderResponse = UpdateSAMLProviderResponse'
  { _usamlprrsSAMLProviderARN ::
      !(Maybe Text),
    _usamlprrsResponseStatus ::
      !Int
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'UpdateSAMLProviderResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'usamlprrsSAMLProviderARN' - The Amazon Resource Name (ARN) of the SAML provider that was updated.
--
-- * 'usamlprrsResponseStatus' - -- | The response status code.
updateSAMLProviderResponse ::
  -- | 'usamlprrsResponseStatus'
  Int ->
  UpdateSAMLProviderResponse
updateSAMLProviderResponse pResponseStatus_ =
  UpdateSAMLProviderResponse'
    { _usamlprrsSAMLProviderARN =
        Nothing,
      _usamlprrsResponseStatus = pResponseStatus_
    }

-- | The Amazon Resource Name (ARN) of the SAML provider that was updated.
usamlprrsSAMLProviderARN :: Lens' UpdateSAMLProviderResponse (Maybe Text)
usamlprrsSAMLProviderARN = lens _usamlprrsSAMLProviderARN (\s a -> s {_usamlprrsSAMLProviderARN = a})

-- | -- | The response status code.
usamlprrsResponseStatus :: Lens' UpdateSAMLProviderResponse Int
usamlprrsResponseStatus = lens _usamlprrsResponseStatus (\s a -> s {_usamlprrsResponseStatus = a})

instance NFData UpdateSAMLProviderResponse
