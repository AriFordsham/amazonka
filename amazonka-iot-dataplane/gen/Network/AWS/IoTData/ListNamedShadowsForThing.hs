{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.IoTData.ListNamedShadowsForThing
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Lists the shadows for the specified thing.
module Network.AWS.IoTData.ListNamedShadowsForThing
  ( -- * Creating a Request
    listNamedShadowsForThing,
    ListNamedShadowsForThing,

    -- * Request Lenses
    lnsftNextToken,
    lnsftPageSize,
    lnsftThingName,

    -- * Destructuring the Response
    listNamedShadowsForThingResponse,
    ListNamedShadowsForThingResponse,

    -- * Response Lenses
    lnsftrrsNextToken,
    lnsftrrsTimestamp,
    lnsftrrsResults,
    lnsftrrsResponseStatus,
  )
where

import Network.AWS.IoTData.Types
import Network.AWS.Lens
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'listNamedShadowsForThing' smart constructor.
data ListNamedShadowsForThing = ListNamedShadowsForThing'
  { _lnsftNextToken ::
      !(Maybe Text),
    _lnsftPageSize ::
      !(Maybe Nat),
    _lnsftThingName ::
      !Text
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'ListNamedShadowsForThing' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lnsftNextToken' - The token to retrieve the next set of results.
--
-- * 'lnsftPageSize' - The result page size.
--
-- * 'lnsftThingName' - The name of the thing.
listNamedShadowsForThing ::
  -- | 'lnsftThingName'
  Text ->
  ListNamedShadowsForThing
listNamedShadowsForThing pThingName_ =
  ListNamedShadowsForThing'
    { _lnsftNextToken =
        Nothing,
      _lnsftPageSize = Nothing,
      _lnsftThingName = pThingName_
    }

-- | The token to retrieve the next set of results.
lnsftNextToken :: Lens' ListNamedShadowsForThing (Maybe Text)
lnsftNextToken = lens _lnsftNextToken (\s a -> s {_lnsftNextToken = a})

-- | The result page size.
lnsftPageSize :: Lens' ListNamedShadowsForThing (Maybe Natural)
lnsftPageSize = lens _lnsftPageSize (\s a -> s {_lnsftPageSize = a}) . mapping _Nat

-- | The name of the thing.
lnsftThingName :: Lens' ListNamedShadowsForThing Text
lnsftThingName = lens _lnsftThingName (\s a -> s {_lnsftThingName = a})

instance AWSRequest ListNamedShadowsForThing where
  type
    Rs ListNamedShadowsForThing =
      ListNamedShadowsForThingResponse
  request = get ioTData
  response =
    receiveJSON
      ( \s h x ->
          ListNamedShadowsForThingResponse'
            <$> (x .?> "nextToken")
            <*> (x .?> "timestamp")
            <*> (x .?> "results" .!@ mempty)
            <*> (pure (fromEnum s))
      )

instance Hashable ListNamedShadowsForThing

instance NFData ListNamedShadowsForThing

instance ToHeaders ListNamedShadowsForThing where
  toHeaders = const mempty

instance ToPath ListNamedShadowsForThing where
  toPath ListNamedShadowsForThing' {..} =
    mconcat
      [ "/api/things/shadow/ListNamedShadowsForThing/",
        toBS _lnsftThingName
      ]

instance ToQuery ListNamedShadowsForThing where
  toQuery ListNamedShadowsForThing' {..} =
    mconcat
      [ "nextToken" =: _lnsftNextToken,
        "pageSize" =: _lnsftPageSize
      ]

-- | /See:/ 'listNamedShadowsForThingResponse' smart constructor.
data ListNamedShadowsForThingResponse = ListNamedShadowsForThingResponse'
  { _lnsftrrsNextToken ::
      !( Maybe
           Text
       ),
    _lnsftrrsTimestamp ::
      !( Maybe
           Integer
       ),
    _lnsftrrsResults ::
      !( Maybe
           [Text]
       ),
    _lnsftrrsResponseStatus ::
      !Int
  }
  deriving
    ( Eq,
      Read,
      Show,
      Data,
      Typeable,
      Generic
    )

-- | Creates a value of 'ListNamedShadowsForThingResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'lnsftrrsNextToken' - The token for the next set of results, or null if there are no additional results.
--
-- * 'lnsftrrsTimestamp' - The Epoch date and time the response was generated by AWS IoT.
--
-- * 'lnsftrrsResults' - The list of shadows for the specified thing.
--
-- * 'lnsftrrsResponseStatus' - -- | The response status code.
listNamedShadowsForThingResponse ::
  -- | 'lnsftrrsResponseStatus'
  Int ->
  ListNamedShadowsForThingResponse
listNamedShadowsForThingResponse pResponseStatus_ =
  ListNamedShadowsForThingResponse'
    { _lnsftrrsNextToken =
        Nothing,
      _lnsftrrsTimestamp = Nothing,
      _lnsftrrsResults = Nothing,
      _lnsftrrsResponseStatus =
        pResponseStatus_
    }

-- | The token for the next set of results, or null if there are no additional results.
lnsftrrsNextToken :: Lens' ListNamedShadowsForThingResponse (Maybe Text)
lnsftrrsNextToken = lens _lnsftrrsNextToken (\s a -> s {_lnsftrrsNextToken = a})

-- | The Epoch date and time the response was generated by AWS IoT.
lnsftrrsTimestamp :: Lens' ListNamedShadowsForThingResponse (Maybe Integer)
lnsftrrsTimestamp = lens _lnsftrrsTimestamp (\s a -> s {_lnsftrrsTimestamp = a})

-- | The list of shadows for the specified thing.
lnsftrrsResults :: Lens' ListNamedShadowsForThingResponse [Text]
lnsftrrsResults = lens _lnsftrrsResults (\s a -> s {_lnsftrrsResults = a}) . _Default . _Coerce

-- | -- | The response status code.
lnsftrrsResponseStatus :: Lens' ListNamedShadowsForThingResponse Int
lnsftrrsResponseStatus = lens _lnsftrrsResponseStatus (\s a -> s {_lnsftrrsResponseStatus = a})

instance NFData ListNamedShadowsForThingResponse
